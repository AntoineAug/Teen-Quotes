create table "countries" ("id" integer not null primary key autoincrement, "name" varchar not null, "country_code" varchar not null);
create unique index countries_name_unique on "countries" ("name");
create unique index countries_country_code_unique on "countries" ("country_code");
drop table if exists "users";
create table "users" ("id" integer not null primary key autoincrement, "login" varchar not null, "password" varchar not null, "email" varchar not null, "security_level" integer not null default '0', "ip" varchar not null, "birthdate" date null, "gender" varchar null, "country" varchar null, "city" varchar null, "avatar" varchar null, "about_me" varchar null, "hide_profile" integer not null default '0', "notification_comment_quote" integer not null default '1', "last_visit" datetime null, "remember_token" varchar null, "created_at" datetime not null, "updated_at" datetime not null);
drop table if exists "quotes";
create table "quotes" ("id" integer not null primary key autoincrement, "content" varchar not null, "user_id" integer not null, "approved" integer not null default '0', "created_at" datetime not null, "updated_at" datetime not null, foreign key("user_id") references "users"("id") on delete cascade);
create index quotes_user_id_index on "quotes" ("user_id");
drop table if exists "comments";
create table "comments" ("id" integer not null primary key autoincrement, "content" varchar not null, "quote_id" integer not null, "user_id" integer not null, "created_at" datetime not null, "updated_at" datetime not null, foreign key("quote_id") references "quotes"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);
create index comments_quote_id_index on "comments" ("quote_id");
create index comments_user_id_index on "comments" ("user_id");
drop table if exists "profile_visitors";
create table "profile_visitors" ("id" integer not null primary key autoincrement, "user_id" integer not null, "visitor_id" integer not null, "created_at" datetime not null, "updated_at" datetime not null, foreign key("user_id") references "users"("id") on delete cascade, foreign key("visitor_id") references "users"("id") on delete cascade);
create index profile_visitors_user_id_index on "profile_visitors" ("user_id");
create index profile_visitors_visitor_id_index on "profile_visitors" ("visitor_id");
drop table if exists "favorite_quotes";
create table "favorite_quotes" ("id" integer not null primary key autoincrement, "quote_id" integer not null, "user_id" integer not null, "created_at" datetime not null, "updated_at" datetime not null, foreign key("quote_id") references "quotes"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);
create index favorite_quotes_quote_id_index on "favorite_quotes" ("quote_id");
create index favorite_quotes_user_id_index on "favorite_quotes" ("user_id");
drop table if exists "newsletters";
create table "newsletters" ("id" integer not null primary key autoincrement, "user_id" integer not null, "type" varchar not null default 'weekly', "created_at" datetime not null, "updated_at" datetime not null, foreign key("user_id") references "users"("id") on delete cascade);
create index newsletters_user_id_index on "newsletters" ("user_id");
drop table if exists "stories";
create table "stories" ("id" integer not null primary key autoincrement, "represent_txt" text not null, "frequence_txt" text not null, "user_id" integer not null, "created_at" datetime not null, "updated_at" datetime not null, foreign key("user_id") references "users"("id") on delete cascade);
create index stories_user_id_index on "stories" ("user_id");
create table "password_reminders" ("email" varchar not null, "token" varchar not null, "created_at" datetime not null);
create index password_reminders_email_index on "password_reminders" ("email");
create index password_reminders_token_index on "password_reminders" ("token");
drop table if exists "settings";
create table "settings" ("id" integer not null primary key autoincrement, "user_id" integer not null, "key" varchar not null, "value" varchar not null, foreign key("user_id") references "users"("id") on delete cascade);
create index settings_user_id_index on "settings" ("user_id");
create table "tags" ("id" integer not null primary key autoincrement, "name" varchar not null);
create unique index tags_name_unique on "tags" ("name");
create table "user_tag" ("quote_id" integer not null, "tag_id" integer not null, foreign key("quote_id") references "quotes"("id") on delete cascade, foreign key("tag_id") references "tags"("id") on delete cascade);
create index user_tag_quote_id_index on "user_tag" ("quote_id");
create index user_tag_tag_id_index on "user_tag" ("tag_id");
create table "quote_tag" ("quote_id" integer not null, "tag_id" integer not null, foreign key("quote_id") references "quotes"("id") on delete cascade, foreign key("tag_id") references "tags"("id") on delete cascade);
create index quote_tag_quote_id_index on "quote_tag" ("quote_id");
create index quote_tag_tag_id_index on "quote_tag" ("tag_id");

-- Seed countries table
INSERT INTO `countries` (`id`, `name`, `country_code`)
VALUES
	(1,'Afghanistan','AF'),
	(2,'Albania','AL'),
	(3,'Algeria','DZ'),
	(4,'American Samoa','AS'),
	(5,'Andorra','AD'),
	(6,'Angola','AO'),
	(7,'Anguilla','AI'),
	(8,'Antarctica','AQ'),
	(9,'Antigua and Barbuda','AG'),
	(10,'Argentina','AR'),
	(11,'Armenia','AM'),
	(12,'Aruba','AW'),
	(13,'Australia','AU'),
	(14,'Austria','AT'),
	(15,'Azerbaijan','AZ'),
	(16,'Bahamas','BS'),
	(17,'Bahrain','BH'),
	(18,'Bangladesh','BD'),
	(19,'Barbados','BB'),
	(20,'Belarus','BY'),
	(21,'Belgium','BE'),
	(22,'Belize','BZ'),
	(23,'Benin','BJ'),
	(24,'Bermuda','BM'),
	(25,'Bhutan','BT'),
	(26,'Bolivia','BO'),
	(27,'Bosnia and Herzegovina','BA'),
	(28,'Botswana','BW'),
	(29,'Bouvet Island','BV'),
	(30,'Brazil','BR'),
	(31,'British Indian Ocean Territory','IO'),
	(32,'Brunei Darussalam','BN'),
	(33,'Bulgaria','BG'),
	(34,'Burkina Faso','BF'),
	(35,'Burundi','BI'),
	(36,'Cambodia','KH'),
	(37,'Cameroon','CM'),
	(38,'Canada','CA'),
	(39,'Cape Verde','CV'),
	(40,'Cayman Islands','KY'),
	(41,'Central African Republic','CF'),
	(42,'Chad','TD'),
	(43,'Chile','CL'),
	(44,'China','CN'),
	(45,'Christmas Island','CX'),
	(46,'Cocos (Keeling) Islands','CC'),
	(47,'Colombia','CO'),
	(48,'Comoros','KM'),
	(49,'Congo','CG'),
	(50,'Congo The Democratic Republic of The Congo','CD'),
	(51,'Cook Islands','CK'),
	(52,'Costa Rica','CR'),
	(53,'Cote D''ivoire','CI'),
	(54,'Croatia','HR'),
	(55,'Cuba','CU'),
	(56,'Cyprus','CY'),
	(57,'Czech Republic','CZ'),
	(58,'Denmark','DK'),
	(59,'Djibouti','DJ'),
	(60,'Dominica','DM'),
	(61,'Dominican Republic','DO'),
	(62,'Ecuador','EC'),
	(63,'Egypt','EG'),
	(64,'El Salvador','SV'),
	(65,'Equatorial','GQ'),
	(66,'Eritrea','ER'),
	(67,'Estonia','EE'),
	(68,'Ethiopia','ET'),
	(69,'Falkland Islands (Malvinas)','FK'),
	(70,'Faroe','FO'),
	(71,'Fiji','FJ'),
	(72,'Finland','FI'),
	(73,'France','FR'),
	(74,'French Guiana','GF'),
	(75,'French Polynesia','PF'),
	(76,'French Southern Territories','TF'),
	(77,'Gabon','GA'),
	(78,'Gambia','GM'),
	(79,'Georgia','GE'),
	(80,'Germany','DE'),
	(81,'Ghana','GH'),
	(82,'Gibraltar','GI'),
	(83,'Greece','GR'),
	(84,'Greenland','GL'),
	(85,'Grenada','GD'),
	(86,'Guadeloupe','GP'),
	(87,'Guam','GU'),
	(88,'Guatemala','GT'),
	(89,'Guinea','GN'),
	(90,'Guinea-Bissau','GW'),
	(91,'Guyana','GY'),
	(92,'Haiti','HT'),
	(93,'Heard Island and McDonald Islands','HM'),
	(94,'Honduras','HN'),
	(95,'Hong Kong','HK'),
	(96,'Hungary','HU'),
	(97,'Iceland','IS'),
	(98,'India','IN'),
	(99,'Indonesia','ID'),
	(100,'Iran','IR'),
	(101,'Iraq','IQ'),
	(102,'Ireland','IE'),
	(103,'Israel','IL'),
	(104,'Italy','IT'),
	(105,'Jamaica','JM'),
	(106,'Japan','JP'),
	(107,'Jordan','JO'),
	(108,'Kazakhstan','KZ'),
	(109,'Kenya','KE'),
	(110,'Kiribati','KI'),
	(111,'Korea','KR'),
	(112,'Kuwait','KW'),
	(113,'Kyrgyzstan','KG'),
	(114,'Lao People''s Democratic Republic','LA'),
	(115,'Latvia','LV'),
	(116,'Lebanon','LB'),
	(117,'Lesotho','LS'),
	(118,'Liberia','LR'),
	(119,'Libyan Arab Jamahiriya','LY'),
	(120,'Liechtenstein','LI'),
	(121,'Lithuania','LT'),
	(122,'Luxembourg','LU'),
	(123,'Macao','MO'),
	(124,'Macedonia','MK'),
	(125,'Madagascar','MG'),
	(126,'Malawi','MW'),
	(127,'Malaysia','MY'),
	(128,'Maldives','MV'),
	(129,'Mali','ML'),
	(130,'Malta','MT'),
	(131,'Marshall Islands','MH'),
	(132,'Martinique','MQ'),
	(133,'Mauritania','MR'),
	(134,'Mauritius','MU'),
	(135,'Mayotte','YT'),
	(136,'Mexico','MX'),
	(137,'Micronesia','FM'),
	(138,'Moldova','MD'),
	(139,'Monaco','MC'),
	(140,'Mongolia','MN'),
	(141,'Montserrat','MS'),
	(142,'Morocco','MA'),
	(143,'Mozambique','MZ'),
	(144,'Myanmar','MM'),
	(145,'Namibia','NA'),
	(146,'Nauru','NR'),
	(147,'Nepal','NP'),
	(148,'Netherlands','NL'),
	(149,'Netherlands Antilles','BQ'),
	(150,'New Caledonia','NC'),
	(151,'New Zealand','NZ'),
	(152,'Nicaragua','NI'),
	(153,'Niger','NE'),
	(154,'Nigeria','NG'),
	(155,'Niue','NU'),
	(156,'Norfolk Island','NF'),
	(157,'Northern Mariana Islands','MP'),
	(158,'Norway','NO'),
	(159,'Oman','OM'),
	(160,'Pakistan','PK'),
	(161,'Palau','PW'),
	(162,'Palestinian Territory','PS'),
	(163,'Panama','PA'),
	(164,'Papua New Guinea','PG'),
	(165,'Paraguay','PY'),
	(166,'Peru','PE'),
	(167,'Philippines','PH'),
	(168,'Pitcairn','PN'),
	(169,'Poland','PL'),
	(170,'Portugal','PT'),
	(171,'Puerto Rico','PR'),
	(172,'Qatar','QA'),
	(173,'Reunion','RE'),
	(174,'Romania','RO'),
	(175,'Russian Federation','RU'),
	(176,'Rwanda','RW'),
	(177,'Saint Helena','SH'),
	(178,'Saint Kitts and Nevis','KN'),
	(179,'Saint Lucia','LC'),
	(180,'Saint Pierre and Miquelon','PM'),
	(181,'Saint Vincent and the Grenadines','VC'),
	(182,'Samoa','WS'),
	(183,'San Marino','SM'),
	(184,'Sao Tome and Principe','ST'),
	(185,'Saudi Arabia','SA'),
	(186,'Senegal','SN'),
	(187,'Serbia','RS'),
	(188,'Seychelles','SC'),
	(189,'Sierra Leone','SL'),
	(190,'Singapore','SG'),
	(191,'Slovakia','Sk'),
	(192,'Slovenia','SI'),
	(193,'Solomon Islands','SB'),
	(194,'Somalia','SO'),
	(195,'South Africa','ZA'),
	(196,'South Georgia and The South Sandwich Islands','GS'),
	(197,'Spain','ES'),
	(198,'Sri Lanka','LK'),
	(199,'Sudan','SD'),
	(200,'Suriname','SR'),
	(201,'Svalbard and Jan Mayen','SJ'),
	(202,'Swaziland','SZ'),
	(203,'Sweden','SE'),
	(204,'Switzerland','CH'),
	(205,'Syrian Arab Republic','SY'),
	(206,'Taiwan','TW'),
	(207,'Tajikistan','TJ'),
	(208,'Tanzania','TZ'),
	(209,'Thailand','TH'),
	(210,'Timor-leste','TL'),
	(211,'Togo','TG'),
	(212,'Tokelau','TK'),
	(213,'Tonga','TO'),
	(214,'Trinidad and Tobago','TT'),
	(215,'Tunisia','TN'),
	(216,'Turkey','TR'),
	(217,'Turkmenistan','TM'),
	(218,'Turks and Caicos Islands','TC'),
	(219,'Tuvalu','TV'),
	(220,'Uganda','UG'),
	(221,'Ukraine','UA'),
	(222,'United Arab Emirates','AE'),
	(223,'United Kingdom','GB'),
	(224,'United States','US'),
	(225,'United States Minor Outlying Islands','UM'),
	(226,'Uruguay','UY'),
	(227,'Uzbekistan','UZ'),
	(228,'Vanuatu','VU'),
	(229,'Venezuela','VE'),
	(230,'Vietnam','VN'),
	(231,'Virgin Islands, British Virgin Islands','VG'),
	(232,'Virgin Islands, U.S. Virgin Islands','VI'),
	(233,'Wallis and Futuna','WF'),
	(234,'Western Sahara','EH'),
	(235,'Yemen','YE'),
	(236,'Zambia','ZM'),
	(237,'Zimbabwe','ZW');